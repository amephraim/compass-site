from django.core.urlresolvers import reverse
from django.contrib.auth.models import  User
from django.utils.translation import ugettext_lazy as _
from django.db import models
from compass_tweets import models as compassmodels

from groups.base import Group

class Tribe(Group):
    
    members = models.ManyToManyField(User, related_name='tribes', verbose_name=_('members'))
    
    ContextType = models.ManyToManyField(compassmodels.Context,related_name='Contxt')
    def get_absolute_url(self):
        return reverse('tribe_detail', kwargs={'group_slug': self.slug})
    
    def get_url_kwargs(self):
        return {'group_slug': self.slug}

class tribe_rolenames(models.Model):
	genname = models.ForeignKey(compassmodels.Role) 
	newname = models.CharField(max_length=50)
	tribe = models.ForeignKey(Tribe)
	class Meta:
		unique_together = ("genname", "newname", "tribe")
	
	def __unicode__(self):
		return u"Genral Name: %s Name in Tribe: %s Tribe Name: %s" % (self.genname,self.newname,self.tribe)
		
	
class allroles(models.Model):
	member = models.ForeignKey(User)
	role = models.ForeignKey(compassmodels.Role)
	tribe = models.ForeignKey(Tribe)
	class Meta:
		unique_together = ("member", "role", "tribe")
	
	def __unicode__(self):
		return u"Mamber Name: %s Role: %s Tribe Name: %s" % (self.genname,self.newname,self.tribe) 
	

	
